{"version":3,"file":"syncableStore.umd.js","sources":["../src/syncableStore.ts"],"sourcesContent":["/*******************************************************************************\n*                                                                              *\n*                                SyncableStore                                 *\n*                                                                              *\n*******************************************************************************/\n\n  import {\n    syncedStore, SyncedDoc,SyncedArray,SyncedMap,SyncedXml,SyncedText, Box,boxed,\n    observeDeep, areSame,\n    Y, getYjsDoc as _getYjsDoc, getYjsValue\n  } from '@syncedstore/core'\n\n/**** syncableStore ****/\n\n  const StoreOfRoot:WeakMap<any,any> = new WeakMap()\n\n  export function syncableStore (\n    Callback:Function, reportClosestArrayObject:boolean = false, sharedDoc?:any\n  ):any {\n    const sharedStore = syncedStore({ Root:{} },sharedDoc)\n      const StoreRoot = sharedStore.Root\n      StoreOfRoot.set(StoreRoot,sharedStore)\n\n      StoreEntryOfYjsItem.set(getYjsValue(StoreRoot),StoreRoot)\n\n      if (Callback != null) {\n        observeDeep(StoreRoot,\n          (...ArgList:any[]) => reportChanges(ArgList[1],StoreRoot,reportClosestArrayObject,Callback)\n        )\n      }\n    return sharedStore.Root\n  }\n\n/**** getYjsDoc (modified for syncableStore) ****/\n\n  export function getYjsDoc (StoreRoot:any) {\n    const Store = StoreOfRoot.get(StoreRoot)\n    if (Store == null) throw new Error(\n      'NoSuchStore: the given object is not a valid \"SyncableStore\"'\n    )\n\n    return _getYjsDoc(Store)\n  }\n\n/**** transact (modified for syncableStore) ****/\n\n  export function transact (StoreRoot:any, Callback:Function) {\n    const YjsDoc = getYjsDoc(StoreRoot)\n    if (YjsDoc == null) throw new Error(\n      'NoYjsDoc: no Yjs document for the given \"SyncableStore\" found'\n    )\n\n// @ts-ignore TS2345 don't be too strict regarding the function signature\n    YjsDoc.transact(Callback)\n  }\n\n/**** reportChanges ****/\n\n  function reportChanges (\n    YjsTransaction:any, StoreRoot:any, reportClosestArrayObject:boolean,\n    Callback:Function\n  ):void {\n    const Transaction:Map<any,string[]> = new Map()\n      YjsTransaction.changed.forEach((PropertySet:any,Container:any) => {\n        let changedEntry = StoreEntryForYjsItem(Container,StoreRoot)\n        if (changedEntry != null) {\n          if (Array.isArray(changedEntry) && reportClosestArrayObject) {\n            reportClosestObjectWithArray(Container,StoreRoot,Transaction)\n          } else {\n            if (PropertySet.size === 0) {\n              memoizeContentsOf(changedEntry)\n              Transaction.set(changedEntry,[])\n            } else {\n              for (let Property of PropertySet) {\n                const Entry   = changedEntry[Property]\n                const YjsItem = getYjsValue(Entry)\n                if (YjsItem != null) {\n                  StoreEntryOfYjsItem.set(YjsItem,Entry)\n                  memoizeContentsOf(Entry)\n                }\n              }\n              Transaction.set(changedEntry,Array.from(PropertySet.values() as string[]).filter(\n                (Candidate:any) => Candidate != null\n              ))\n            }\n          }\n        }\n      })\n    Callback(Transaction)\n  }\n\n/**** StoreEntryForYjsItem ****/\n\n  const StoreEntryOfYjsItem:WeakMap<any,any> = new WeakMap()\n\n  function StoreEntryForYjsItem (YjsItem:any, StoreRoot:any):any {\n    const knownEntry = StoreEntryOfYjsItem.get(YjsItem)\n    if (knownEntry != null) { return knownEntry }\n\n    const outerYjsItem = (\n      YjsItem._item?.parent || YjsItem._start?.parent || getYjsValue(StoreRoot)\n    )\n    if (outerYjsItem == null) throw new Error(\n      'NoRegisteredRoot: the given store root has no Yjs counterpart'\n    )\n\n    const outerEntry = StoreEntryOfYjsItem.get(outerYjsItem)\n    if (outerEntry == null) { return undefined }\n\n    let matchingEntry = undefined\n    if (Array.isArray(outerEntry)) {\n      matchingEntry = outerEntry.find(         // scan array for changed element\n        (Candidate:any) => getYjsValue(Candidate) === YjsItem\n      )\n    } else {\n      const knownProperty = YjsItem._item?.parentSub\n      if (typeof knownProperty === 'string') {   // directly access changed item\n        matchingEntry = outerEntry[knownProperty]\n      } else {\n        matchingEntry = outerEntry.values().find(// scan object for changed item\n          (Candidate:any) => getYjsValue(Candidate) === YjsItem\n        )\n      }\n    }\n\n    if (matchingEntry != null) {                        // memoize changed entry\n      StoreEntryOfYjsItem.set(YjsItem,matchingEntry)\n      memoizeContentsOf(matchingEntry)\n    }\n\n    return matchingEntry                               // may still be undefined\n  }\n\n/**** reportClosestObjectWithArray ****/\n\n  function reportClosestObjectWithArray (\n    YjsItem:any, StoreRoot:any, Transaction:Map<any,string[]>\n  ):void {\n    const outerYjsItem = (\n      YjsItem._item?.parent || YjsItem._start?.parent || getYjsValue(StoreRoot)\n    )\n    if (outerYjsItem._start == null) {\n      let outerEntry = StoreEntryOfYjsItem.get(outerYjsItem)\n\n      let Property = Object.keys(outerEntry).find(// scan for prop. with YjsItem\n        (Candidate:any) => getYjsValue(outerEntry[Candidate]) === YjsItem\n      )\n      Transaction.set(outerEntry,[Property as  string])\n    } else {\n      reportClosestObjectWithArray(outerYjsItem,StoreRoot,Transaction)\n    }\n  }\n\n/**** reportChanges ****/\n\n  function memoizeContentsOf (StoreEntry:any):void {\n    let EntryList = (\n      Array.isArray(StoreEntry) ? StoreEntry : Object.values(StoreEntry)\n    )\n\n    EntryList.forEach((Entry:any) => {\n      const YjsItem = getYjsValue(Entry)\n      if (YjsItem != null) {\n        StoreEntryOfYjsItem.set(YjsItem,Entry)\n        memoizeContentsOf(Entry)\n      }\n    })\n  }\n\n  export {\n    SyncedDoc,SyncedArray,SyncedMap,SyncedXml,SyncedText, Box,boxed,\n    areSame,\n    Y, getYjsValue\n  }"],"names":["StoreOfRoot","WeakMap","getYjsDoc","StoreRoot","Store","get","Error","_getYjsDoc","StoreEntryOfYjsItem","reportClosestObjectWithArray","YjsItem","Transaction","outerYjsItem","_item","parent","_start","getYjsValue","outerEntry","Property","Object","keys","find","Candidate","set","memoizeContentsOf","StoreEntry","Array","isArray","values","forEach","Entry","Callback","reportClosestArrayObject","sharedDoc","sharedStore","syncedStore","Root","observeDeep","ArgList","YjsTransaction","Map","changed","PropertySet","Container","changedEntry","knownEntry","matchingEntry","knownProperty","parentSub","StoreEntryForYjsItem","size","from","filter","reportChanges","YjsDoc","transact"],"mappings":"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"}