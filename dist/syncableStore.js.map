{"version":3,"file":"syncableStore.js","sources":["../src/syncableStore.ts"],"sourcesContent":["/*******************************************************************************\n*                                                                              *\n*                                SyncableStore                                 *\n*                                                                              *\n*******************************************************************************/\n\n  import {\n    syncedStore, SyncedDoc,SyncedArray,SyncedMap,SyncedXml,SyncedText, Box,boxed,\n    observeDeep, areSame,\n    Y, getYjsDoc as _getYjsDoc, getYjsValue\n  } from '@syncedstore/core'\n\n/**** syncableStore ****/\n\n  const StoreOfRoot:WeakMap<any,any> = new WeakMap()\n\n  export function syncableStore (\n    Callback:Function, reportClosestArrayObject:boolean = false, sharedDoc?:any\n  ):any {\n    const sharedStore = syncedStore({ Root:{} },sharedDoc)\n      const StoreRoot = sharedStore.Root\n      StoreOfRoot.set(StoreRoot,sharedStore)\n\n      StoreEntryOfYjsItem.set(getYjsValue(StoreRoot),StoreRoot)\n\n      if (Callback != null) {\n        observeDeep(StoreRoot,\n          (...ArgList:any[]) => reportChanges(ArgList[1],StoreRoot,reportClosestArrayObject,Callback)\n        )\n      }\n    return sharedStore.Root\n  }\n\n/**** getYjsDoc (modified for syncableStore) ****/\n\n  export function getYjsDoc (StoreRoot:any) {\n    const Store = StoreOfRoot.get(StoreRoot)\n    if (Store == null) throw new Error(\n      'NoSuchStore: the given object is not a valid \"SyncableStore\"'\n    )\n\n    return _getYjsDoc(Store)\n  }\n\n/**** transact (modified for syncableStore) ****/\n\n  export function transact (StoreRoot:any, Callback:Function) {\n    const YjsDoc = getYjsDoc(StoreRoot)\n    if (YjsDoc == null) throw new Error(\n      'NoYjsDoc: no Yjs document for the given \"SyncableStore\" found'\n    )\n\n// @ts-ignore TS2345 don't be too strict regarding the function signature\n    YjsDoc.transact(Callback)\n  }\n\n/**** reportChanges ****/\n\n  function reportChanges (\n    YjsTransaction:any, StoreRoot:any, reportClosestArrayObject:boolean,\n    Callback:Function\n  ):void {\n    const Transaction:Map<any,string[]> = new Map()\n      YjsTransaction.changed.forEach((PropertySet:any,Container:any) => {\n        let changedEntry = StoreEntryForYjsItem(Container,StoreRoot)\n        if (changedEntry != null) {\n          if (Array.isArray(changedEntry) && reportClosestArrayObject) {\n            reportClosestObjectWithArray(Container,StoreRoot,Transaction)\n          } else {\n            if (PropertySet.size === 0) {\n              memoizeContentsOf(changedEntry)\n              Transaction.set(changedEntry,[])\n            } else {\n              for (let Property of PropertySet) {\n                const Entry   = changedEntry[Property]\n                const YjsItem = getYjsValue(Entry)\n                if (YjsItem != null) {\n                  StoreEntryOfYjsItem.set(YjsItem,Entry)\n                  memoizeContentsOf(Entry)\n                }\n              }\n              Transaction.set(changedEntry,Array.from(PropertySet.values() as string[]).filter(\n                (Candidate:any) => Candidate != null\n              ))\n            }\n          }\n        }\n      })\n    Callback(Transaction)\n  }\n\n/**** StoreEntryForYjsItem ****/\n\n  const StoreEntryOfYjsItem:WeakMap<any,any> = new WeakMap()\n\n  function StoreEntryForYjsItem (YjsItem:any, StoreRoot:any):any {\n    const knownEntry = StoreEntryOfYjsItem.get(YjsItem)\n    if (knownEntry != null) { return knownEntry }\n\n    const outerYjsItem = (\n      YjsItem._item?.parent || YjsItem._start?.parent || getYjsValue(StoreRoot)\n    )\n    if (outerYjsItem == null) throw new Error(\n      'NoRegisteredRoot: the given store root has no Yjs counterpart'\n    )\n\n    const outerEntry = StoreEntryOfYjsItem.get(outerYjsItem)\n    if (outerEntry == null) { return undefined }\n\n    let matchingEntry = undefined\n    if (Array.isArray(outerEntry)) {\n      matchingEntry = outerEntry.find(         // scan array for changed element\n        (Candidate:any) => getYjsValue(Candidate) === YjsItem\n      )\n    } else {\n      const knownProperty = YjsItem._item?.parentSub\n      if (typeof knownProperty === 'string') {   // directly access changed item\n        matchingEntry = outerEntry[knownProperty]\n      } else {\n        matchingEntry = outerEntry.values().find(// scan object for changed item\n          (Candidate:any) => getYjsValue(Candidate) === YjsItem\n        )\n      }\n    }\n\n    if (matchingEntry != null) {                        // memoize changed entry\n      StoreEntryOfYjsItem.set(YjsItem,matchingEntry)\n      memoizeContentsOf(matchingEntry)\n    }\n\n    return matchingEntry                               // may still be undefined\n  }\n\n/**** reportClosestObjectWithArray ****/\n\n  function reportClosestObjectWithArray (\n    YjsItem:any, StoreRoot:any, Transaction:Map<any,string[]>\n  ):void {\n    const outerYjsItem = (\n      YjsItem._item?.parent || YjsItem._start?.parent || getYjsValue(StoreRoot)\n    )\n    if (outerYjsItem._start == null) {\n      let outerEntry = StoreEntryOfYjsItem.get(outerYjsItem)\n\n      let Property = Object.keys(outerEntry).find(// scan for prop. with YjsItem\n        (Candidate:any) => getYjsValue(outerEntry[Candidate]) === YjsItem\n      )\n      Transaction.set(outerEntry,[Property as  string])\n    } else {\n      reportClosestObjectWithArray(outerYjsItem,StoreRoot,Transaction)\n    }\n  }\n\n/**** reportChanges ****/\n\n  function memoizeContentsOf (StoreEntry:any):void {\n    let EntryList = (\n      Array.isArray(StoreEntry) ? StoreEntry : Object.values(StoreEntry)\n    )\n\n    EntryList.forEach((Entry:any) => {\n      const YjsItem = getYjsValue(Entry)\n      if (YjsItem != null) {\n        StoreEntryOfYjsItem.set(YjsItem,Entry)\n        memoizeContentsOf(Entry)\n      }\n    })\n  }\n\n  export {\n    SyncedDoc,SyncedArray,SyncedMap,SyncedXml,SyncedText, Box,boxed,\n    areSame,\n    Y, getYjsValue\n  }"],"names":["StoreOfRoot","WeakMap","getYjsDoc","StoreRoot","Store","get","Error","_getYjsDoc","StoreEntryOfYjsItem","reportClosestObjectWithArray","YjsItem","Transaction","outerYjsItem","_a","_item","parent","_b","_start","getYjsValue","outerEntry_1","Property","Object","keys","find","Candidate","set","memoizeContentsOf","StoreEntry","Array","isArray","values","forEach","Entry","Callback","reportClosestArrayObject","sharedDoc","sharedStore","syncedStore","Root","observeDeep","ArgList","_i","arguments","length","YjsTransaction","Map","changed","PropertySet","Container","changedEntry","knownEntry","outerEntry","matchingEntry","undefined","knownProperty","_c","parentSub","StoreEntryForYjsItem","size","PropertySet_1","from","filter","reportChanges","YjsDoc","transact"],"mappings":"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"}